<%= @post.id %>
<%= @post %>
<%= @post.body %>
<%= params %>

<div class="p10">
  <%= form_for [:admin, Asset.new], :class => "form-horizontal", :html => { :target => "publish_asset" } do |f| %>
    <div class="form-group">
      <%= f.file_field :filedata, :autocomplete => "off" %>
    </div>
    <%= button_tag type: "submit", class: "btn btn-success" do %>
      <span class="glyphicon glyphicon-plus"></span> 새 파일 업로드
    <% end %>
  <% end %>
  <iframe id="publish_asset" name="publish_asset" style="display:none;" src="about:blank"></iframe>
  <ul id="asset_list" class="list-unstyled" style="overflow-y:scroll;overflow-x:hidden;"></ul>
  
  <%= simple_form_for [:admin, @post] do |f| %>
    <% @errors = @post.errors.messages %>
    <%= f.hidden_field :user_id, value: current_user.id %>
    <%= f.hidden_field :body %>

    <div class="editor_wrapper">
      <div id="epiceditor"></div>
      <div id="epiceditor-preview"></div>
    </div>
    
    <div id="save_pannel">
      <a id="save">현재 편집 상황 임시 저장</a><br>
      <ul id="saved_list"></ul>
      <a id="flush">저장본 후련하게 싹 비우기</a><br>
      <a id="insert">ddddddd</a><br>
    </div>    
    
    <div class="w300">
      <br>
      <%= f.input :title, label: "제목", label_html: { class: "fwb" }, input_html: { class: "form-control" }, error: false %>
      <% flash_error_message(:title) %>
      <% flash_error_message(:body) %>
      <br>
      <%= f.input :subject_id, label: "주제", label_html: { class: "fwb" }, error: false, :collection => Subject.all.map { |s| [s.name, s.id] }, input_html: { class: "form-control", onChange: "javascript:reloadParentCategory(this.value)"} %>
      <% flash_error_message(:subject_id) %>
      <script type="text/javascript" charset="utf-8">
      function reloadParentCategory(value) {
        console.log(value)
        $.ajax('../shared/reload_parent_category?subject=' + value)
      }
      </script>
      <br>
      <%= f.input :category_id, label: "분류", label_html: { class: "fwb" }, input_html: { class: "form-control" }, error: false, :collection => Category.category_roles.order(:position).map { |s| [s.name, s.id] }.reject{ |a,i| i == @post.category_id} %>
      <% flash_error_message(:parent_id) %>
      <br>
      <%= f.input :view_type, label: "뷰타입", label_html: { class: "fwb" }, input_html: { class: "form-control" }, error: false, collection: Category::VIEW_TYPE %>
      <% flash_error_message(:view_type) %>
      <br>
      <%= render "/shared/form_confirm_or_cancel" %>
    </div>
  <% end %>
</div>

<%= javascript_include_tag "epiceditor" %>

<script type="text/javascript" charset="utf-8">
setTimeout(function(){
  var opts = {
    container: 'epiceditor',
    textarea: 'post_draft_body',
    basePath: '<%= asset_path('assets') %>',
    clientSideStorage: false,
    localStorageName: 'epiceditor',
    useNativeFullscreen: false,
    parser: marked,
    file: {
      name: 'epiceditor',
      defaultContent: '내용',
      autoSave: 100
    },
    theme: {
      base: '/base/epiceditor.css',
      preview: '/preview/github.css',
      editor: '/editor/epic-light.css'
    },
    buttons: false,
    focusOnLoad: false,
    autogrow: false,
    addons: [ 'google-code-prettify' ]
  }
  var editor = new EpicEditor(opts);

  $('#insert').click(function(){
    editor.insertText("ddd")
  });

  function insertText(trigger) {
    editor.insertText(trigger)
  }

  function insertImage(trigger) {
    var src = $(trigger).attr("rel");
    var filename = String(/[^\/]+$/.exec(src));
    var new_img = "<p><img src='"+ src +"' alt='" + filename + "'/></p>"
    editor.insertText(new_img)
  };

  function insertFile(trigger) {
    var filename = $(trigger).html();
    var new_link = "<p><a href='' target='_blank'>" + filename + "</a></p>"
    window.activated_editor.insertHtml(new_link);
  };


  var previewer;
  editor.load(function () {
    console.log(22)
    previewer = this.getElement('previewer');

    // Prettify JS
    var scriptTag = previewer.createElement('script');
    scriptTag.src = '/assets/prettify.js';

    // Prettify CSS
    var cssTag = previewer.createElement('link');
    cssTag.rel = 'stylesheet';
    cssTag.type = 'text/css';
    cssTag.href = '/assets/prettify.css';

    // Add JS / CSS
    previewer.body.appendChild(scriptTag);
    previewer.head.appendChild(cssTag);

    console.log("Editor loaded.")
  });
  
  editor.on('update', function () {
    var value = this.exportFile(null, 'html');
    document.querySelector('#epiceditor-preview').innerHTML = value;
    
    // pretty print
    var previewerBody = document.querySelector('#epiceditor-preview');
    var codeBlocks = previewerBody.getElementsByTagName('code');
    for (var i = 0; i < codeBlocks.length; i++) {
      if (codeBlocks[i].className.search('prettyprint') != -1) {
        continue;
      } else {
        codeBlocks[i].className += ' prettyprint';
      }
    }
    prettyPrint(null, previewerBody);
  }).emit('update');
  
  // auto save
  setInterval(function () {
    $.ajax({
      type: 'post',
      url: '../post_drafts/<%= @post.id %>/auto_save',
      data: $('.simple_form').serialize(),
      success: function (xhr, status, m) { console.log(m)},
    }).fail(function(xhr, status, m) { console.log(m)})
  }, 3000);

},500);
</script>